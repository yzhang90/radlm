t__teleop_base = topics.t__teleop_base 
t__teleop_estop = topics.t__teleop_estop 
t__teleop_over_ride = topics.t__teleop_over_ride 
t__teleop_turret_pan = topics.t__teleop_turret_pan 
t__teleop_turret_tilt = topics.t__teleop_turret_tilt 
t__teleop_moog_pan = topics.t__teleop_moog_pan 
t__teleop_moog_tilt = topics.t__teleop_moog_tilt 
t__teleop_moog_zoom = topics.t__teleop_moog_zoom 
t__teleop_paintball_trigger = topics.t__teleop_paintball_trigger 
t__teleop_select = topics.t__controller_select

t__map = topics.t__map 
t__goal = topics.t__goal 
t__pp = topics.t__pp 

ocu_gui_node : node  {
  DEFS
    array_size = arrays.map_array_size
  PUBLISHES
    map { TOPIC t__map }
    goal { TOPIC t__goal }
    pp { TOPIC t__pp }
  PERIOD 100msec
  PATH "src/ocu"
  CXX { LIB fltk_lib PATH "src" HEADER "OcuGui.h" CLASS "OcuGui"
    FILENAME "OcuGui.cpp" "flgui.cpp" LIB boostlib }
}

landshark_teleop : node {
  DEFS
    XBOX_WIRED: uint8 1
    XBOX_WIRELESS: uint8 2
  DEFS
    device: string "/dev/xbox_wired/js0"
    jstype = XBOX_WIRED
    deadzone: float32 0.20
    heartbeat_timeout: duration 1000msec
  PUBLISHES
    base { TOPIC t__teleop_base }
    estop { TOPIC t__teleop_estop }
    over_ride { TOPIC t__teleop_over_ride }
    turret_pan { TOPIC t__teleop_turret_pan }
    turret_tilt { TOPIC t__teleop_turret_tilt }
    moog_pan { TOPIC t__teleop_moog_pan }
    moog_tilt { TOPIC t__teleop_moog_tilt }
    moog_zoom { TOPIC t__teleop_moog_zoom }
    trigger { TOPIC t__teleop_paintball_trigger }
    select { TOPIC t__teleop_select } # assume joystick publishes select signal for now
  PERIOD landshark.joystick_period
  PATH "src/landshark_teleop"
  CXX { PATH "src" HEADER "LandsharkJoystick.h" CLASS "LandsharkJoystick" FILENAME "LandsharkJoystick.cpp" LIB boostlib }
}

############# Libraries #############

fltk_lib : cmake_library { 
  PATH "src/ocu/cmake"
  CMAKE_MODULE "FLTK"
}

boostlib : cmake_library {
  CMAKE_MODULE "Boost"
  CMAKE_COMPONENTS "thread" "system"
}
