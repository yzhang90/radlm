
This example demonstrate how to write a gateway to forward back and forth messages between the RADL world and a local sandboxed ROS.

The RADL world is defined in the radl_files folder. It consists ofa radl description containing three nodes. A device stub publishing an integer, an actuator stub subscribing to a float and a gateway node for an external controller node, forwarding device msgs to it and forwartding actuators msgs from it.

To complete the example, a stub of a sandboxed ROS controller node is also provided in the sandboxed_ros_controller folder.

There are basically two interesting files, the gateway.radl description of the RADL system which defines the gateway node and the associated gateway.h file implementing the actual gateway.

To generate the files from the radl description, do:
mkdir -p ws/src
radler.sh --ws_dir ws/src compile radl_files/gateway.radl


Then to compile everything and get ros executables, do:
ln -s ../../sandboxed_ros_controller ws/src/sandboxed_ros_controller
cd ws
catkin_make


You can then run all of them (in different terminals for more clarity):
roscore
./devel/lib/gateway/device_node
./devel/lib/gateway/actuator_node
./devel/lib/gateway/controller_gateway
./devel/lib/sandboxed_ros_controller/sandboxed_ros_controller






